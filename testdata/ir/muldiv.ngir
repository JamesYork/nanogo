package runtime "runtime"

package main "github.com/rj45/nanogo/testdata/muldiv"

var main__init_guard:*bool

func main__init:
.b0:
  v0:bool = load   ^main__init_guard
  if2    v0, b1, b2
.b1:
  jump2 b3
.b2:
  v2:bool = store  ^main__init_guard, true
  jump2 b3
.b3:
  return2

func main__mulu:
.b0:
  v1:uint = parameter a:uint
  v3:uint = parameter b:uint
  jump2 b1
.b1:
  v4:uint = phi    v1, v14
  v5:uint = phi    v3, v15
  v6:uint = phi    0, v13
  v8:bool = greater v5, 0
  if2    v8, b2, b6
.b2:
  v9:uint = and    v5, 1
  v11:bool = notEqual v9, 0
  if2    v11, b4, b3
.b3:
  jump2 b5
.b4:
  v12:uint = add    v6, v4
  jump2 b5
.b5:
  v13:uint = phi    v6, v12
  v14:uint = shiftLeft v4, 1
  v15:uint = shiftRight v5, 1
  jump2 b1
.b6:
  return2 v6

func main__divu:
.b0:
  v1:uint = parameter dividend:uint
  v3:uint = parameter divisor:uint
  v4:bool = equal  v3, 0
  if2    v4, b1, b2
.b1:
  v6:interface{} = makeInterface -255
  panic2 v6
.b2:
  jump2 b3
.b3:
  v8:uint = phi    0, v25
  v9:uint = phi    0, v26
  v10:int = phi    15, v27
  v12:bool = greaterEqual v10, 0
  if2    v12, b4, b8
.b4:
  v13:uint = shiftLeft v8, 1
  v15:uint = shiftLeft v9, 1
  v16:uint = convert v10
  v17:uint = shiftLeft 1, v16
  v18:uint = and    v1, v17
  v19:uint = convert v10
  v20:uint = shiftRight v18, v19
  v21:uint = or     v15, v20
  v22:bool = greaterEqual v21, v3
  if2    v22, b6, b5
.b5:
  jump2 b7
.b6:
  v23:uint = sub    v21, v3
  v24:uint = or     v13, 1
  jump2 b7
.b7:
  v25:uint = phi    v13, v24
  v26:uint = phi    v21, v23
  v27:int = sub    v10, 1
  jump2 b3
.b8:
  return2 v8, v9

func main__main:
.b0:
  v0:uint = call   ^main__mulu, 2, 5
  v4:bool = notEqual v0, 10
  if2    v4, b1, b2
.b1:
  v6:interface{} = makeInterface v0
  panic2 v6
.b2:
  v7:uint = call   ^main__mulu, 49, 1234
  v10:bool = notEqual v7, 60466
  if2    v10, b3, b4
.b3:
  v12:interface{} = makeInterface v7
  panic2 v12
.b4:
  v13:uint, v14:uint = call   ^main__divu, 10, 5
  v16:bool = notEqual v13, 2
  if2    v16, b5, b6
.b5:
  v17:interface{} = makeInterface v13
  panic2 v17
.b6:
  v18:bool = notEqual v14, 0
  if2    v18, b7, b8
.b7:
  v20:interface{} = makeInterface v14
  panic2 v20
.b8:
  v21:uint, v22:uint = call   ^main__divu, 1234, 13
  v24:bool = notEqual v21, 94
  if2    v24, b9, b10
.b9:
  v26:interface{} = makeInterface v21
  panic2 v26
.b10:
  v27:bool = notEqual v22, 12
  if2    v27, b11, b12
.b11:
  v29:interface{} = makeInterface v22
  panic2 v29
.b12:
  return2
